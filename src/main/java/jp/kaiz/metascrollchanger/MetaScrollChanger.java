package jp.kaiz.metascrollchanger;

import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.settings.KeyBinding;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.player.InventoryPlayer;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.util.NonNullList;
import net.minecraft.util.math.MathHelper;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.ConfigElement;
import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.fml.client.IModGuiFactory;
import net.minecraftforge.fml.client.config.GuiConfig;
import net.minecraftforge.fml.client.event.ConfigChangedEvent;
import net.minecraftforge.fml.client.registry.ClientRegistry;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.InputEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;
import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;

import java.util.Collection;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

@Mod(modid = MetaScrollChanger.MODID, version = MetaScrollChanger.VERSION, name = MetaScrollChanger.NAME, guiFactory = "jp.kaiz.metascrollchanger.MetaScrollChanger", clientSideOnly = true)
public class MetaScrollChanger implements IModGuiFactory {
    public static final String MODID = "metascrollchanger";
    public static final String VERSION = "1.12.2_1.1.0";
    public static final String NAME = "MetaScrollChanger";

    @Mod.Metadata(MODID)
    public static ModMetadata metadata;

    private static final String CATEGORY_KEY = "msc.key";

    private MSCGuiInGame guiInGame;
    private Minecraft mc;
    public static final KeyBinding KEY_TRIGGER = new KeyBinding("msc.trigger", Keyboard.KEY_TAB, CATEGORY_KEY);
    private static Configuration cfg;
    private boolean invert;

    @Mod.EventHandler
    public void preInit(FMLPreInitializationEvent event) {
        MetaScrollChanger.registerMetadata(metadata);
        this.mc = Minecraft.getMinecraft();
        this.guiInGame = new MSCGuiInGame(Minecraft.getMinecraft());
        MinecraftForge.EVENT_BUS.register(this);
        FMLCommonHandler.instance().bus().register(this);
        MetaScrollChanger.cfg = new Configuration(event.getSuggestedConfigurationFile());
        MetaScrollChanger.cfg.load();
        this.syncConfig();
    }

    public static void registerMetadata(ModMetadata meta) {
        meta.modId = MODID;
        meta.name = NAME;
        meta.version = VERSION;
        meta.authorList.add("Twitter@Kaiz_JP");
        meta.url = "https://github.com/Kai-Z-JP/MetaScrollChanger";
        meta.autogenerated = false;
    }

    private void syncConfig() {
        this.invert = MetaScrollChanger.cfg.getBoolean("Invert scroll", "MetaScrollChanger", false, "");
        MetaScrollChanger.cfg.save();
    }

    @Mod.EventHandler
    public void init(FMLInitializationEvent event) {
        ClientRegistry.registerKeyBinding(KEY_TRIGGER);
    }

    @SubscribeEvent
    public void onConfigChanged(ConfigChangedEvent.OnConfigChangedEvent event) {
        if (event.getModID().equals(MODID)) {
            this.syncConfig();
        }
    }

    @SubscribeEvent
    public void onRenderGui(RenderGameOverlayEvent.Pre event) {
        this.guiInGame.onRenderGui(event);
    }

    private int currentItemSlot;

    @SubscribeEvent
    public void onMouseInput(TickEvent.PlayerTickEvent event) {
        if (event.phase == TickEvent.Phase.START) {
            this.currentItemSlot = event.player.inventory.currentItem;
        }
    }

    @SubscribeEvent
    public void onMouseInput(InputEvent.MouseInputEvent event) {
        if (this.mc.playerController.isInCreativeMode()) {
            if (MetaScrollChanger.KEY_TRIGGER.isKeyDown()) {
                EntityPlayer player = this.mc.player;
                InventoryPlayer inventory = player.inventory;
                inventory.currentItem = this.currentItemSlot;
                int i = MathHelper.clamp(Mouse.getEventDWheel(), -1, 1);
                if (i == 0) {
                    return;
                }
                if (this.invert) {
                    i = -i;
                }
                ItemStack itemStack = inventory.getCurrentItem();
                Item item = itemStack.getItem();
                NonNullList<ItemStack> list = NonNullList.create();
                item.getSubItems(CreativeTabs.SEARCH, list);
                int size = list.size();
                if (size == 1) {
                    return;
                }

                int index = IntStream.range(0, size).filter(i1 -> list.get(i1).isItemEqual(itemStack)).findFirst().orElse(-1);
                if (index == -1) {
                    return;
                }
                int meta = (index + i + size) % size;
                int slot = 36 + inventory.currentItem;
                this.mc.playerController.sendSlotPacket(list.get(meta), slot);
            }
        }
    }

    @Override
    public void initialize(Minecraft minecraftInstance) {
    }

    @Override
    public boolean hasConfigGui() {
        return true;
    }

    @Override
    public GuiScreen createConfigGui(GuiScreen parentScreen) {
        return new MSCConfigGui(parentScreen);
    }

    @Override
    public Set<RuntimeOptionCategoryElement> runtimeGuiCategories() {
        return null;
    }

    public static class MSCConfigGui extends GuiConfig {
        public MSCConfigGui(GuiScreen parentScreen) {
            super(parentScreen,
                    MetaScrollChanger.cfg.getCategoryNames().stream()
                            .map(MetaScrollChanger.cfg::getCategory)
                            .map(ConfigElement::new)
                            .map(ConfigElement::getChildElements)
                            .flatMap(Collection::stream)
                            .collect(Collectors.toList()),
                    MetaScrollChanger.MODID, false, false, MetaScrollChanger.NAME);
        }
    }
}
